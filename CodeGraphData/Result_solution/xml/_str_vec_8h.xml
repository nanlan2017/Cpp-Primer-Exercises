<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="_str_vec_8h" kind="file">
    <compoundname>StrVec.h</compoundname>
    <includes local="no">string</includes>
    <includedby refid="_str_vec_8cpp" local="yes">C:/workspace/vs_wspace/Cpp Primer 5th exercises/StrVec/StrVec.cpp</includedby>
    <incdepgraph>
      <node id="169">
        <label>C:/workspace/vs_wspace/Cpp Primer 5th exercises/StrVec/StrVec.h</label>
        <link refid="StrVec.h"/>
        <childnode refid="170" relation="include">
        </childnode>
      </node>
      <node id="170">
        <label>string</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="171">
        <label>C:/workspace/vs_wspace/Cpp Primer 5th exercises/StrVec/StrVec.h</label>
        <link refid="StrVec.h"/>
        <childnode refid="172" relation="include">
        </childnode>
      </node>
      <node id="172">
        <label>C:/workspace/vs_wspace/Cpp Primer 5th exercises/StrVec/StrVec.cpp</label>
        <link refid="_str_vec_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_str_vec" prot="public">StrVec</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>STRVEC_H</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>STRVEC_H</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/************************************************</highlight></codeline>
<codeline lineno="9"><highlight class="comment">实现一个Vector，只能保存string</highlight></codeline>
<codeline lineno="10"><highlight class="comment">其内部使用动态数组来保存数据。</highlight></codeline>
<codeline lineno="11"><highlight class="comment">具有自动扩容的能力（使用allocator）</highlight></codeline>
<codeline lineno="12"><highlight class="comment">************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="class_str_vec" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_str_vec" kindref="compound">StrVec</ref></highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15" refid="class_str_vec_1a329645b4acd92d35d34b845e71cabddc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="class_str_vec_1a55d0d44b556352d7b78d69fec7a25353" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_str_vec_1a55d0d44b556352d7b78d69fec7a25353" kindref="member">StrVec</ref>()<sp/>:_elments(nullptr),<sp/>_first_free(nullptr),<sp/>_cap(nullptr){}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_str_vec" kindref="compound">StrVec</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_str_vec" kindref="compound">StrVec</ref>&amp;<sp/>copyobj);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_str_vec" kindref="compound">StrVec</ref>&amp;<sp/>operator<sp/>=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_str_vec" kindref="compound">StrVec</ref>&amp;<sp/>right);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="class_str_vec" kindref="compound">StrVec</ref>();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>push_back(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>str);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="class_str_vec_1a08a9f1648e06600a8b540d801c261621" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_str_vec_1a08a9f1648e06600a8b540d801c261621" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_cap<sp/>-<sp/>_first_free;<sp/>}</highlight></codeline>
<codeline lineno="26" refid="class_str_vec_1a2cd51890dab8b9f3921e0028b25efd4b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_str_vec_1a2cd51890dab8b9f3921e0028b25efd4b" kindref="member">capacity</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_cap<sp/>-<sp/>_elments;<sp/>}</highlight></codeline>
<codeline lineno="27" refid="class_str_vec_1a0933c3c2a5a23605b8c36158af649978" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">*<sp/><ref refid="class_str_vec_1a0933c3c2a5a23605b8c36158af649978" kindref="member">begin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_elments;<sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28" refid="class_str_vec_1ac944379eabd39da7f53ef45730d242b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">*<sp/><ref refid="class_str_vec_1ac944379eabd39da7f53ef45730d242b6" kindref="member">end</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_first_free;<sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31" refid="class_str_vec_1ad0064d6cbfa2ce362d73d63f6f021ca9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_str_vec_1ad0064d6cbfa2ce362d73d63f6f021ca9" kindref="member">chk_n_alloc</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>保证至少有容纳一个元素的空间</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size()==capacity())<sp/>reallocate();<sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>分配内存，并拷贝给定范围内的元素</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>pair&lt;string*,<sp/>string*&gt;<sp/>alloc_n_copy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>free();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>释放当前内存</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reallocate();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>重新分配更大的内存，并拷贝现有元素过去</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="class_str_vec_1a3cc951391d4baa836a0bfe225497a809" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>allocator&lt;string&gt;<sp/><ref refid="class_str_vec_1a3cc951391d4baa836a0bfe225497a809" kindref="member">alloc</ref>;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>4个功能：allocate(),deallocate();<sp/><sp/>construct(),destroy()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="class_str_vec_1a0d932f30cfc102248daeab1a305043b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">*<sp/><ref refid="class_str_vec_1a0d932f30cfc102248daeab1a305043b0" kindref="member">_elments</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>指向动态数组中首元素</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="class_str_vec_1af9e9502872d61f53588d4019f2d3e847" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">*<sp/><ref refid="class_str_vec_1af9e9502872d61f53588d4019f2d3e847" kindref="member">_first_free</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>指向空闲区第一个元素</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="class_str_vec_1a9521c4ac9fc9cbcbf536ac54b9cd3a53" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">*<sp/><ref refid="class_str_vec_1a9521c4ac9fc9cbcbf536ac54b9cd3a53" kindref="member">_cap</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>指向动态数组末尾后</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/workspace/vs_wspace/Cpp Primer 5th exercises/StrVec/StrVec.h"/>
  </compounddef>
</doxygen>
